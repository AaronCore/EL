@{
    ViewData["Title"] = "Account";
}
<div id="accountApp" v-clock>
    <template>
        <el-container>
            <el-header style="padding-top:25px;">
                <el-form ref="form" :inline="true" :model="search_form">
                    <el-row :gutter="10">
                        <el-col :span="6">
                            <el-form-item label="搜索：">
                                <el-input style="width:300px;" size="medium" v-model="search_form.search_key" placeholder="请输入关键字"></el-input>
                            </el-form-item>
                        </el-col>
                        <el-col :span="8">
                            <el-button type="primary" size="medium" v-on:click="search" icon="el-icon-fa-search">查询</el-button>
                            <el-button type="success" size="medium" v-on:click="add" icon="el-icon-fa-plus">添加</el-button>
                            <el-button type="danger" size="medium" v-on:click="dels" icon="el-icon-delete">删除</el-button>
                            <el-button type="warning" size="medium" v-on:click="enableds" icon="el-icon-fa-edit">状态修改</el-button>
                            <el-button type="primary" size="medium" v-on:click="reset" icon="el-icon-fa-recycle">重置</el-button>
                        </el-col>
                    </el-row>
                </el-form>
            </el-header>
            <el-main>
                <template>
                    <el-table :data="tableData" border size="medium" style="width:100%" :max-height="maxHeight" v-on:selection-change="selectionChange">
                        <el-table-column type="selection" :selectable="checkSelect" width="40">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="id" v-if="false" label="Id" width="80">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="account" label="账号">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="roleName" label="角色名称">
                        </el-table-column>
                        <el-table-column header-align="center" prop="enabled" width="80" label="状态">
                            <template slot-scope="scope">
                                <el-button :type="scope.row.enabled ? 'success' : 'danger'" size="mini">{{scope.row.enabled?"启用":"禁用" }}</el-button>
                            </template>
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="sort" label="排序号" width="80">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="createTime" label="创建时间" width="200">
                        </el-table-column>
                        <el-table-column header-align="center" label="操作" width="100">
                            <template slot-scope="scope">
                                <el-button :disabled="scope.row.account == 'admin'" v-on:click="edit(scope.row)" type="primary" plain size="mini">编辑</el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                    <el-row :gutter="20">
                        <el-col :span="8" :offset="8">
                            <el-pagination v-on:size-change="handleSizeChange"
                                           v-on:current-change="handleCurrentChange"
                                           :page-sizes="pageSizes"
                                           :page-size="pageSize"
                                           :current-page="1"
                                           layout="total, sizes, prev, pager, next, jumper"
                                           :total="total">
                            </el-pagination>
                        </el-col>
                    </el-row>
                </template>
            </el-main>
        </el-container>

    </template>
    <template>
        <el-dialog title="账号编辑" :visible.sync="accountFormVisible">
            <el-form :model="accountForm" ref="accountForm" :rules="rules" label-position="right" label-width="100px">
                <el-form-item label="角色" prop="roleId">
                    <el-select v-model="accountForm.roleId" filterable clearable placeholder="请选择">
                        <el-option v-for="item in roleOptions"
                                   :key="item.value"
                                   :label="item.text"
                                   :value="item.value">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="账号" prop="account">
                    <el-input v-model="accountForm.account" placeholder="请输入登录账号名称"></el-input>
                </el-form-item>
                <el-form-item label="密码" v-show="passwordShow" prop="password" v-bind:required="required">
                    <el-input type="password" v-model="accountForm.password" placeholder="请输入登录账号密码"></el-input>
                </el-form-item>
                <el-form-item label="排序号">
                    <el-input-number v-model="accountForm.sort" :min="1" :max="1000" placeholder="排序号"></el-input-number>
                </el-form-item>
                <el-form-item label="状态">
                    <el-switch style="display: block;margin-top:9px;"
                               v-model="accountForm.enabled"
                               active-color="#13ce66"
                               inactive-color="#ff4949"
                               active-text="启用"
                               inactive-text="禁用">
                    </el-switch>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button v-on:click="resetForm('accountForm')">重 置</el-button>
                <el-button type="primary" v-on:click="submitForm('accountForm')" v-bind:loading="editLoading">确 定</el-button>
            </div>
        </el-dialog>
    </template>
</div>
@section script {
    <script>
        new Vue({
            el: "#accountApp",
            data: {
                maxHeight: gobal.params.tableMaxHeight,
                pageSizes: [30, 50, 100, 300],
                pageSize: 30,
                pageIndex: 1,
                total: 0,
                search_form: {
                    search_key: null,
                },
                accountFormVisible: false,
                editLoading: false,
                passwordShow: true,
                accountForm: {
                    id: 0,
                    roleId: null,
                    account: null,
                    password: null,
                    sort: 0,
                    enabled: true
                },
                rules: {
                    name: [{ required: true, message: '请输入名称', trigger: 'blur' }],
                    account: [
                        { required: true, message: '请输入登录账号名称', trigger: 'blur' },
                        { min: 3, max: 10, message: '长度在 3 到 10 个字符' },
                        { pattern: /^[0-9a-zA-Z_]+$/, message: '登录账号名必须是英文数字组合' }
                    ],
                    roleId: [{ required: true, message: '请选择一个角色', trigger: 'blur' }],
                },
                ids: [],
                tableData: [],
                roleOptions: [],
                required: false,
            },
            methods: {
                checkSelect: function (row, index) {
                    return row.account == "admin" ? false : true;
                },
                //查询
                search: function () {
                    this.pageReset();
                    this.getTableData();
                },
                //添加
                add: function () {
                    this.accountFormVisible = true;
                    this.resetForm("accountForm");
                },
                //重置
                reset: function () {
                    this.search_form.search_key = null;
                    this.pageReset();
                    this.getTableData();
                },
                getRole: function (row) {
                    ajax.get("/Account/GetRoleList").then((res) => {
                        this.roleOptions = res;
                    });
                },
                //编辑
                edit: function (row) {
                    this.passwordShow = false;
                    ajax.get("/Account/GetAccount?id=" + row.id).then((res) => {
                        this.accountForm = res;
                        this.accountFormVisible = true;
                    });
                },
                //表单提交
                submitForm: function (formName) {
                    if (this.accountForm.id <= 0) {
                        this.required = true;
                        this.rules.password = [
                            { required: true, message: '请输入密码' },
                            { min: 6, max: 15, message: '长度在 6 到 15 个字符' }
                        ];
                    }
                    this.$refs[formName].validate((valid) => {
                        if (valid) {
                            this.editLoading = true;
                            ajax.post('/Account/Submit', this.accountForm).then((res) => {
                                if (res.code == 0) {
                                    this.editLoading = false;
                                    api.showMsg("操作成功...", "success");
                                    this.resetForm("accountForm");
                                    this.accountFormVisible = false;
                                    this.getTableData();
                                } else {
                                    api.showMsg("操作失败，详情请查看错误日志...", "error");
                                }
                            });
                        } else {
                            console.log('error submit!!');
                            return false;
                        }
                    });
                },
                //表单重置
                resetForm: function (formName) {
                    if (this.$refs[formName] !== undefined) {
                        this.$refs[formName].resetFields();
                    }
                },
                //状态修改
                enableds: function () {
                    if (this.ids.length <= 0) {
                        api.showMsg("请选择数据...", "warning");
                        return false;
                    }
                    common.enableds(this, '/Account/Enableds', { ids: this.ids });
                },
                //删除
                dels: function () {
                    if (this.ids.length <= 0) {
                        api.showMsg("请选择数据...", "warning");
                        return false;
                    }
                    common.deletes(this, '/Account/Deletes', { ids: this.ids });
                },
                //获取列表
                getTableData: function () {
                    var options = {
                        pageIndex: this.pageIndex,
                        pageSize: this.pageSize,
                        searchKey: this.search_form.search_key
                    };
                    ajax.post("/Account/GetAccountPageList", options).then((res) => {
                        this.tableData = res.data;
                        this.pageIndex = res.pageIndex;
                        this.pageSize = res.pageSize;
                        this.total = res.total;
                    });
                },
                //获取选中行
                selectionChange: function (rows) {
                    var idArr = [];
                    if (rows) {
                        rows.forEach(row => {
                            idArr.push(row.id);
                        });
                        this.ids = idArr;
                    }
                },
                pageReset: function () {
                    this.pageSize = 30;
                    this.pageIndex = 1;
                    this.total = 0;
                },
                handleSizeChange(val) {
                    this.pageSize = val;
                    this.getTableData();
                },
                handleCurrentChange(val) {
                    this.pageIndex = val;
                    this.getTableData();
                }
            },
            created: function () {
                this.getTableData();
                this.getRole();
            }
        });
    </script>
}

