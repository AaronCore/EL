@{
    ViewData["Title"] = "Menu";
}
<div id="menuApp" v-clock>
    <template>
        <el-container>
            <el-header style="padding-top:25px;">
                <el-row :gutter="10">
                    <el-col :span="18">
                        <el-button type="success" size="medium" v-on:click="add" icon="el-icon-fa-plus">添加</el-button>
                        <el-button type="danger" size="medium" v-on:click="dels" icon="el-icon-delete">删除</el-button>
                        <el-button type="warning" size="medium" v-on:click="enableds" icon="el-icon-fa-edit">状态修改</el-button>
                    </el-col>
                </el-row>
            </el-header>
            <el-main>
                <template>
                    <el-table :data="tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))"
                              border row-key="id" size="medium" style="width: 100%;" :max-height="maxHeight"
                              :tree-props="{children: 'children', hasChildren: 'hasChildren'}"
                              v-on:selection-change="selectionChange">
                        <el-table-column type="selection" width="40"></el-table-column>
                        <el-table-column header-align="center" align="center" prop="id" v-if="false" label="Id" width="100">
                        </el-table-column>
                        <el-table-column header-align="center" prop="name" label="名称" width="300">
                        </el-table-column>
                        <el-table-column header-align="center" prop="path" label="地址" show-overflow-tooltip="true">
                        </el-table-column>
                        <el-table-column header-align="center" prop="enabled" width="80" label="状态">
                            <template slot-scope="scope">
                                <el-button :type="scope.row.enabled ? 'success' : 'danger'" size="mini">{{scope.row.enabled?"启用":"禁用" }}</el-button>
                            </template>
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="sort" label="排序号" width="80">
                        </el-table-column>
                        <el-table-column header-align="center" align="center" prop="createTime" label="创建时间" width="200">
                        </el-table-column>
                        <el-table-column align="right" width="300">
                            <template slot="header" slot-scope="scope">
                                <el-input v-model="search" size="mini" placeholder="输入关键字搜索" />
                            </template>
                            <template slot-scope="scope">
                                <el-button v-on:click="edit(scope.row)" type="primary" plain size="mini">编辑</el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                </template>
            </el-main>
        </el-container>

    </template>
    <template>
        <el-dialog title="菜单编辑" :visible.sync="menuFormVisible">
            <el-form :model="menuForm" ref="menuForm" :rules="rules" label-position="right" label-width="100px">
                <el-form-item label="上级菜单">
                    <el-cascader style="width:250px;" ref="menuRef" prop="parentId" v-model="menuForm.parentId"
                                 :options="menuOptions" clearable placeholder="请选择"
                                 :props="{ checkStrictly: true }">
                    </el-cascader>
                </el-form-item>
                <el-form-item label="名称" prop="name">
                    <el-input v-model="menuForm.name" placeholder="请输入菜单名称"></el-input>
                </el-form-item>
                <el-form-item label="地址" prop="path">
                    <el-input v-model="menuForm.path" placeholder="请输入菜单地址"></el-input>
                </el-form-item>
                <el-form-item label="Icon" prop="icon">
                    <el-input v-model="menuForm.icon" placeholder="Icon"></el-input>
                </el-form-item>
                <el-form-item label="排序号" prop="sort">
                    <el-input-number v-model="menuForm.sort" :min="1" :max="1000" placeholder="排序号"></el-input-number>
                </el-form-item>
                <el-form-item label="状态">
                    <el-switch style="display: block;margin-top:9px;"
                               v-model="menuForm.enabled"
                               active-color="#13ce66"
                               inactive-color="#ff4949"
                               active-text="启用"
                               inactive-text="禁用">
                    </el-switch>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button v-on:click="resetForm('menuForm')">重 置</el-button>
                <el-button type="primary" v-on:click="submitForm('menuForm')" v-bind:loading="editLoading">确 定</el-button>
            </div>
        </el-dialog>
    </template>
</div>
@section script {
    <script>
        new Vue({
            el: "#menuApp",
            data: {
                maxHeight: gobal.params.tableMaxHeight,
                search: null,
                menuFormVisible: false,
                editLoading: false,
                menuForm: {
                    id: 0,
                    parentId: 0,
                    name: null,
                    path: null,
                    code: null,
                    icon: null,
                    sort: 0,
                    enabled: true
                },
                rules: {
                    name: [{ required: true, message: '请输入菜单名称', trigger: 'blur' }]
                },
                ids: [],
                tableData: [],
                menuOptions: []
            },
            methods: {
                //添加
                add: function () {
                    this.getMenu();
                    this.menuFormVisible = true;
                    this.resetForm("menuForm");
                },
                //编辑
                edit: function (row) {
                    this.getMenu();
                    ajax.get("/Menu/GetMenu?id=" + row.id).then((res) => {
                        this.menuForm = res;
                        this.menuFormVisible = true;
                    });
                },
                //表单重置
                resetForm: function (formName) {
                    if (this.$refs[formName] !== undefined) {
                        this.$refs[formName].resetFields();
                    }
                },
                //表单提交
                submitForm: function (formName) {
                    if (this.$refs.menuRef.getCheckedNodes() != null && this.$refs.menuRef.getCheckedNodes().length > 1) {
                        var parentArray = this.$refs.menuRef.getCheckedNodes()[0].path;
                        this.menuForm.parentId = parentArray[parentArray.length - 1];
                    }
                    this.$refs[formName].validate((valid) => {
                        if (valid) {
                            this.editLoading = true;
                            ajax.post('/Menu/Submit', this.menuForm).then((res) => {
                                if (res.code == 0) {
                                    this.editLoading = false;
                                    api.showMsg("操作成功...", "success");
                                    this.resetForm("menuForm");
                                    this.menuFormVisible = false;
                                    this.getTableData();
                                } else {
                                    api.showMsg("操作失败，详情请查看错误日志...", "error");
                                }
                            });
                        } else {
                            console.log('error submit!!');
                            return false;
                        }
                    });
                },
                //状态修改
                enableds: function () {
                    if (this.ids.length <= 0) {
                        api.showMsg("请选择数据...", "warning");
                        return false;
                    }
                    common.enableds(this, '/Menu/Enableds', { ids: this.ids });
                },
                //删除
                dels: function () {
                    if (this.ids.length <= 0) {
                        api.showMsg("请选择数据...", "warning");
                        return false;
                    }
                    common.deletes(this, '/Menu/Deletes', { ids: this.ids });
                },
                //获取列表
                getTableData: function () {
                    ajax.get('/Menu/GetTreeList').then((res) => {
                        this.tableData = res;
                    });
                },
                getMenu: function () {
                    ajax.get('/Menu/GetMenuList').then((res) => {
                        this.menuOptions = res;
                    });
                },
                //获取选中行
                selectionChange: function (rows) {
                    var idArr = [];
                    if (rows) {
                        rows.forEach(row => {
                            idArr.push(row.id);
                        });
                        this.ids = idArr;
                    }
                },
            },
            created: function () {
                this.getTableData();
            }
        });
    </script>
}
